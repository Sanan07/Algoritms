// Перевод числа из двоичной в десятичную форму
static BigInteger toBinary (String S) {
       
       BigInteger b = new BigInteger(S);
       BigInteger  k ,two = new BigInteger("2");
       BigInteger sum = BigInteger.ZERO;
       int i = 0;
       while(b.compareTo(BigInteger.ZERO)==1) {
           k=b.mod(BigInteger.TEN);
           sum=sum.add( (k.multiply(two.pow(i))));
           i++;
           b=b.divide(BigInteger.TEN);
       }
               
       return sum;
   }

// Нахождение максимального подпалинлрома

   S=s.nextLine(); 
           
       
        
           if(palindrom(S)) {
        	   System.out.println(S);
           }
           else {
           ArrayList<String> list = new ArrayList<String>();
           ArrayList<String> copyOFList = new ArrayList<String>();
           
           for(int i=0;i<S.length();i++) {
               for(int j=i;j<S.length();j++) {
                   S1 = S.substring(i, j+1);
                   if(palindrom(S1)) {
                       list.add(S1);
                   }
               }
           }
          
           
           copyOFList.addAll(list);
       
           Comparator<String> comp = new Main();
           
           
           Collections.sort(list, comp);
         
           
           ArrayList<String> list2 = new ArrayList<String>();
           int l = list.get(list.size()-1).length();
           
           for(int i=list.size()-1;i>=0;i--) {
        	   if(list.get(i).length()==l) {
        		   list2.add(list.get(i));
        	   }
        	   else {
        		   break;
        	   }
           }
           int [] a = new int [list2.size()];
           
           for(int i=0;i<list2.size();i++) {
        	   for(int j=0;j<copyOFList.size();j++) {
        		   if(list2.get(i).equals(copyOFList.get(j))) {
        			   a[i]=j;
        		   }
        	   }
           }
      
           Arrays.sort(a);
        
           System.out.println(copyOFList.get(a[0]));
      
           }
